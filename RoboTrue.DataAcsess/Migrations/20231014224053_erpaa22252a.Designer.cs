// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoboTrue.DataAcsess.Contexts;

#nullable disable

namespace RoboTrue.DataAcsess.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20231014224053_erpaa22252a")]
    partial class erpaa22252a
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoboTrue.Core.Entities.AdresCesit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresCesidi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 491, DateTimeKind.Local).AddTicks(8737));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdresCesits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdresCesidi = "İş Yeri",
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 491, DateTimeKind.Local).AddTicks(9269),
                            OlusturanKullaniciId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdresCesidi = "Ev",
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 491, DateTimeKind.Local).AddTicks(9295),
                            OlusturanKullaniciId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdresCesidi = "Diğer",
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 491, DateTimeKind.Local).AddTicks(9299),
                            OlusturanKullaniciId = 1
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.BakimServisSozlesme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CariId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(257));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("SozlesmeDurumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BakimServisSozlesmes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CariId = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(595),
                            OlusturanKullaniciId = 1,
                            SozlesmeDurumId = 1
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Cari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresSoyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aktiflik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BakimServisSozlesmeId")
                        .HasColumnType("int");

                    b.Property<string>("Bloke")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariAdresCesitId")
                        .HasColumnType("int");

                    b.Property<string>("CariKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariTipiId")
                        .HasColumnType("int");

                    b.Property<string>("CariUnvani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(1292));

                    b.Property<int?>("DovizCesidiId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaliyetSektoruId")
                        .HasColumnType("int");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("OzelKod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SatilanUrunleriId")
                        .HasColumnType("int");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<string>("SgkNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelUlkeKoduId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelefonCesitId")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<string>("VatandasNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VergiNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VerigiDairesiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BakimServisSozlesmeId");

                    b.HasIndex("CariAdresCesitId");

                    b.HasIndex("CariTipiId");

                    b.HasIndex("DovizCesidiId");

                    b.HasIndex("FaliyetSektoruId");

                    b.HasIndex("IlceId");

                    b.HasIndex("SatilanUrunleriId");

                    b.HasIndex("SehirId");

                    b.HasIndex("TelUlkeKoduId");

                    b.HasIndex("TelefonCesitId");

                    b.HasIndex("UlkeId");

                    b.HasIndex("VerigiDairesiId");

                    b.ToTable("Caris");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.CariFaliyetSektoru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(2701));

                    b.Property<string>("FaliyetSektoru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CariFaliyetSektorus");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.CariTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(3769));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("SirketTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CariTipis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(4048),
                            OlusturanKullaniciId = 1,
                            SirketTipi = "Anonim Şirket"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(4065),
                            OlusturanKullaniciId = 1,
                            SirketTipi = "Limited Şirket"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(4070),
                            OlusturanKullaniciId = 1,
                            SirketTipi = "Şahıs Şirket"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(4073),
                            OlusturanKullaniciId = 1,
                            SirketTipi = "Şahıs"
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(4752));

                    b.Property<string>("DepartmanAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departmen");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(5091),
                            DepartmanAdi = "Satış"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(5108),
                            DepartmanAdi = "Teknik"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(5112),
                            DepartmanAdi = "Admin"
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CıkanUrunId")
                        .HasColumnType("int");

                    b.Property<int?>("GelenUrunId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("ToplamUrunSayisi")
                        .HasColumnType("int");

                    b.Property<string>("UrunKodu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depos");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.DovizCesidi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(5849));

                    b.Property<string>("DovizCesitleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("SatilanUrunlerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SatilanUrunlerId");

                    b.ToTable("DovizCesidis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(6221),
                            DovizCesitleri = "Tr",
                            OlusturanKullaniciId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(6240),
                            DovizCesitleri = "Euro",
                            OlusturanKullaniciId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(6243),
                            DovizCesitleri = "Dolar",
                            OlusturanKullaniciId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(6247),
                            DovizCesitleri = "Sterlin",
                            OlusturanKullaniciId = 1
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Ilce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(6968));

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ilces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7275),
                            IlceAdi = "Aladağ",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7302),
                            IlceAdi = "Ceyhan",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7306),
                            IlceAdi = "Çukurova",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7309),
                            IlceAdi = "Feke",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7313),
                            IlceAdi = "İmamoğlu",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7319),
                            IlceAdi = "Karaisalı",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7332),
                            IlceAdi = "Karataş",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7349),
                            IlceAdi = "Kozan",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7353),
                            IlceAdi = "Pozantı",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7358),
                            IlceAdi = "Saimbeyli",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7361),
                            IlceAdi = "Sarıçam",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7364),
                            IlceAdi = "Seyhan",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7368),
                            IlceAdi = "Tufanbeyli",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7371),
                            IlceAdi = "Yumurtalık",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(7374),
                            IlceAdi = "Yüreğir",
                            OlusturanKullaniciId = 1,
                            SehirId = 1
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.IsDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciliyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(8077));

                    b.Property<int?>("IslerId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IslerId");

                    b.ToTable("IsDurumus");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Isler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 492, DateTimeKind.Local).AddTicks(9125));

                    b.Property<DateTime>("GelenTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDurumuId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Islers");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Kefil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(287));

                    b.Property<string>("KefilAdiSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kefils");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(2791));

                    b.Property<string>("Css2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Css3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CssClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.OlusturanKullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdresCesitId")
                        .HasColumnType("int");

                    b.Property<int?>("BakimServisSozlesmeId")
                        .HasColumnType("int");

                    b.Property<int?>("CariFaliyetSektoruId")
                        .HasColumnType("int");

                    b.Property<int?>("CariId")
                        .HasColumnType("int");

                    b.Property<int?>("CariTipiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(1242));

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int?>("DovizCesidiId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.Property<int?>("IsDurumuId")
                        .HasColumnType("int");

                    b.Property<int?>("IslerId")
                        .HasColumnType("int");

                    b.Property<int?>("KefilId")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId1")
                        .HasColumnType("int");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<int?>("SahisUnvaniId")
                        .HasColumnType("int");

                    b.Property<int?>("SatilanUrunlerId")
                        .HasColumnType("int");

                    b.Property<int?>("SatinAlinanUrunId")
                        .HasColumnType("int");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SozlesmeDurumId")
                        .HasColumnType("int");

                    b.Property<int?>("TelUlkeKoduId")
                        .HasColumnType("int");

                    b.Property<int?>("TelefonCesitId")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<int?>("VergiDairesiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresCesitId");

                    b.HasIndex("BakimServisSozlesmeId");

                    b.HasIndex("CariFaliyetSektoruId");

                    b.HasIndex("CariId");

                    b.HasIndex("CariTipiId");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("DepoId");

                    b.HasIndex("DovizCesidiId");

                    b.HasIndex("IlceId");

                    b.HasIndex("IsDurumuId");

                    b.HasIndex("IslerId");

                    b.HasIndex("KefilId");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuId1");

                    b.HasIndex("SahisUnvaniId");

                    b.HasIndex("SatilanUrunlerId");

                    b.HasIndex("SatinAlinanUrunId");

                    b.HasIndex("SehirId");

                    b.HasIndex("SozlesmeDurumId");

                    b.HasIndex("TelUlkeKoduId");

                    b.HasIndex("TelefonCesitId");

                    b.HasIndex("UlkeId");

                    b.HasIndex("VergiDairesiId");

                    b.ToTable("Kullanicii");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(2107),
                            DepartmanId = 3,
                            Email = "egekava3235@gmail.com",
                            KullaniciAdi = "Ege Kaba",
                            RolId = 2,
                            Sifre = "ege32353908306"
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(3890));

                    b.Property<int?>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(4212),
                            RoleName = "Personel"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(4232),
                            RoleName = "Yetkili"
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SahisUnvani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(5076));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("SahisGorevi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SahisUnvanis");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SatilanUrunler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int?>("DovizCesidiId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Kdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("SatilanCarilerId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UrunFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.ToTable("SatilanUruns");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SatinAlinanUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AlisFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.ToTable("SatinAlinanUruns");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(6052));

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("SehirAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UlkeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IlceId");

                    b.ToTable("Sehirs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OlusturanKullaniciId = 0,
                            SehirAdi = "Adana",
                            UlkeId = 1
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SozlesmeDurum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BakimServisSozlesmeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(7079));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SozlesmeBaslangıcTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SozlesmeBitis")
                        .HasColumnType("datetime2");

                    b.Property<string>("SozlesmeDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BakimServisSozlesmeId");

                    b.ToTable("SozlesmeDurums");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.TelUlkeKodu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(8918));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("UlkeKodlari")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TelUlkeKodus");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.TelefonCesit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(8031));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonCesiti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TelefonCesits");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Ulke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 493, DateTimeKind.Local).AddTicks(9842));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<string>("Ulkeler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.ToTable("Ulkes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OlusturanKullaniciId = 1,
                            Ulkeler = "Türkiye"
                        });
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.VergiDairesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 15, 1, 40, 52, 494, DateTimeKind.Local).AddTicks(823));

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("VergiDairesiAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VergiDairesis");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Cari", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.BakimServisSozlesme", null)
                        .WithMany("Caris")
                        .HasForeignKey("BakimServisSozlesmeId");

                    b.HasOne("RoboTrue.Core.Entities.AdresCesit", "CariAdresCesit")
                        .WithMany()
                        .HasForeignKey("CariAdresCesitId");

                    b.HasOne("RoboTrue.Core.Entities.CariTipi", "CariTipi")
                        .WithMany()
                        .HasForeignKey("CariTipiId");

                    b.HasOne("RoboTrue.Core.Entities.DovizCesidi", "CalismaDovizi")
                        .WithMany()
                        .HasForeignKey("DovizCesidiId");

                    b.HasOne("RoboTrue.Core.Entities.CariFaliyetSektoru", "FaliyetSektoru")
                        .WithMany()
                        .HasForeignKey("FaliyetSektoruId");

                    b.HasOne("RoboTrue.Core.Entities.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId");

                    b.HasOne("RoboTrue.Core.Entities.SatilanUrunler", "SatilanUrunleri")
                        .WithMany("SatilanCariler")
                        .HasForeignKey("SatilanUrunleriId");

                    b.HasOne("RoboTrue.Core.Entities.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId");

                    b.HasOne("RoboTrue.Core.Entities.TelUlkeKodu", "TelUlkeKodu")
                        .WithMany()
                        .HasForeignKey("TelUlkeKoduId");

                    b.HasOne("RoboTrue.Core.Entities.TelefonCesit", "TelefonCesit")
                        .WithMany()
                        .HasForeignKey("TelefonCesitId");

                    b.HasOne("RoboTrue.Core.Entities.Ulke", "Ulke")
                        .WithMany()
                        .HasForeignKey("UlkeId");

                    b.HasOne("RoboTrue.Core.Entities.VergiDairesi", "VerigiDairesi")
                        .WithMany()
                        .HasForeignKey("VerigiDairesiId");

                    b.Navigation("CalismaDovizi");

                    b.Navigation("CariAdresCesit");

                    b.Navigation("CariTipi");

                    b.Navigation("FaliyetSektoru");

                    b.Navigation("Ilce");

                    b.Navigation("SatilanUrunleri");

                    b.Navigation("Sehir");

                    b.Navigation("TelUlkeKodu");

                    b.Navigation("TelefonCesit");

                    b.Navigation("Ulke");

                    b.Navigation("VerigiDairesi");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.DovizCesidi", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.SatilanUrunler", null)
                        .WithMany("DovizKuru")
                        .HasForeignKey("SatilanUrunlerId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.IsDurumu", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.Isler", null)
                        .WithMany("IsınAciliyeti")
                        .HasForeignKey("IslerId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Menu", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.Role", "Role")
                        .WithMany("Menuler")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.OlusturanKullanici", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.AdresCesit", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("AdresCesitId");

                    b.HasOne("RoboTrue.Core.Entities.BakimServisSozlesme", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("BakimServisSozlesmeId");

                    b.HasOne("RoboTrue.Core.Entities.CariFaliyetSektoru", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("CariFaliyetSektoruId");

                    b.HasOne("RoboTrue.Core.Entities.Cari", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("CariId");

                    b.HasOne("RoboTrue.Core.Entities.CariTipi", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("CariTipiId");

                    b.HasOne("RoboTrue.Core.Entities.Departman", "KayitliOlduguDepartman")
                        .WithMany()
                        .HasForeignKey("DepartmanId");

                    b.HasOne("RoboTrue.Core.Entities.Depo", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("DepoId");

                    b.HasOne("RoboTrue.Core.Entities.DovizCesidi", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("DovizCesidiId");

                    b.HasOne("RoboTrue.Core.Entities.Ilce", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("IlceId");

                    b.HasOne("RoboTrue.Core.Entities.IsDurumu", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("IsDurumuId");

                    b.HasOne("RoboTrue.Core.Entities.Isler", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("IslerId");

                    b.HasOne("RoboTrue.Core.Entities.Kefil", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("KefilId");

                    b.HasOne("RoboTrue.Core.Entities.Menu", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("MenuId");

                    b.HasOne("RoboTrue.Core.Entities.Menu", null)
                        .WithMany("OlusturanKullanici")
                        .HasForeignKey("MenuId1");

                    b.HasOne("RoboTrue.Core.Entities.SahisUnvani", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("SahisUnvaniId");

                    b.HasOne("RoboTrue.Core.Entities.SatilanUrunler", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("SatilanUrunlerId");

                    b.HasOne("RoboTrue.Core.Entities.SatinAlinanUrun", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("SatinAlinanUrunId");

                    b.HasOne("RoboTrue.Core.Entities.Sehir", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("SehirId");

                    b.HasOne("RoboTrue.Core.Entities.SozlesmeDurum", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("SozlesmeDurumId");

                    b.HasOne("RoboTrue.Core.Entities.TelUlkeKodu", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("TelUlkeKoduId");

                    b.HasOne("RoboTrue.Core.Entities.TelefonCesit", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("TelefonCesitId");

                    b.HasOne("RoboTrue.Core.Entities.Ulke", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("UlkeId");

                    b.HasOne("RoboTrue.Core.Entities.VergiDairesi", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("VergiDairesiId");

                    b.Navigation("KayitliOlduguDepartman");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Role", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.OlusturanKullanici", null)
                        .WithMany("Rol")
                        .HasForeignKey("OlusturanKullaniciId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SatilanUrunler", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.Depo", null)
                        .WithMany("CıkanUrun")
                        .HasForeignKey("DepoId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SatinAlinanUrun", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.Depo", null)
                        .WithMany("GelenUrun")
                        .HasForeignKey("DepoId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Sehir", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.Ilce", null)
                        .WithMany("Sehiri")
                        .HasForeignKey("IlceId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SozlesmeDurum", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.BakimServisSozlesme", null)
                        .WithMany("SozlesmeD")
                        .HasForeignKey("BakimServisSozlesmeId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Ulke", b =>
                {
                    b.HasOne("RoboTrue.Core.Entities.Sehir", null)
                        .WithMany("Ulkesi")
                        .HasForeignKey("SehirId");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.AdresCesit", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.BakimServisSozlesme", b =>
                {
                    b.Navigation("Caris");

                    b.Navigation("Kullanici");

                    b.Navigation("SozlesmeD");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Cari", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.CariFaliyetSektoru", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.CariTipi", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Depo", b =>
                {
                    b.Navigation("CıkanUrun");

                    b.Navigation("GelenUrun");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.DovizCesidi", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Ilce", b =>
                {
                    b.Navigation("Kullanici");

                    b.Navigation("Sehiri");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.IsDurumu", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Isler", b =>
                {
                    b.Navigation("IsınAciliyeti");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Kefil", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Menu", b =>
                {
                    b.Navigation("Kullanici");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.OlusturanKullanici", b =>
                {
                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Role", b =>
                {
                    b.Navigation("Menuler");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SahisUnvani", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SatilanUrunler", b =>
                {
                    b.Navigation("DovizKuru");

                    b.Navigation("Kullanici");

                    b.Navigation("SatilanCariler");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SatinAlinanUrun", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Sehir", b =>
                {
                    b.Navigation("Kullanici");

                    b.Navigation("Ulkesi");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.SozlesmeDurum", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.TelUlkeKodu", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.TelefonCesit", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.Ulke", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("RoboTrue.Core.Entities.VergiDairesi", b =>
                {
                    b.Navigation("Kullanici");
                });
#pragma warning restore 612, 618
        }
    }
}
